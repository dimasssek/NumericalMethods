import math
import matplotlib.pyplot as plt
def p(x):
    #return 2
    #return 4
    return 0
def q(x):
    #return 1
    #return 1
    return 1
def f(x):
    #return x
    #return 3 * x
    return 10 * x + 1
def ans(x):
    #return x - 2 * math.exp(1 - x) * (x + 1) - 2
    #return (3 * (math.sqrt(3) - 2) * math.exp(2 * math.sqrt(3)) * (x - 4) - 3 * (math.sqrt(3) - 2)* (x - 4) + 2 * math.exp((math.sqrt(3) - 2) * x) + 2 * (4 * math.sqrt(3) - 7) * math.exp(2 * math.sqrt(3) - (2 + math.sqrt(3)) * x)) / ((math.sqrt(3) - 2)* (math.exp(2 * math.sqrt(3)) - 1))
    return 10 * x - 10 * math.sin(x) + 10 * math.tan(1 / 2) * math.cos(x) + 1

#1 и 2 пример
#A = 1
#B = 3
#3 пример
#A = 0
#B = 0
a = 0
b = 1
x = [0.000]
y = []
m = []
k = []
c = []
d = []
n = 100
h = (b-a)/n
ansY = []
# прям
for i in range(n-1):
    m.append(-2 + h * p(x[i]))
    k.append(1 - h * p(x[i]) + h ** 2 * q(x[i]))
    x.append(x[i] + h)
c.append(1 / (m[0] + k[0]))
d.append((k[0] * A * h) + f(x[0]) * (h**2))
for i in range(1, n-1):
    c.append(1 / (m[i] - k[i] * c[i-1]))
    d.append(f(x[i]) * (h**2) - k[i] * c[i-1] * d[i-1])
# обр
y.append((c[n-2] * d[n-2] + B * h) / (1 + c[n-2]))
for i in range(n-2):
    y.append(c[n-2-i] * (d[n-2-i] - y[i]))
y.append(y[1] - A * h)
y.reverse()
for i in range(n):
    ansY.append(ans(x[i]))
def plotting(x, y, ansY) :
    plt.plot(x, y,  color = 'black', label = 'sweep method')
    plt.plot(x, ansY,  color = 'red', label = 'exact solution')
    plt.xlabel('x')
    plt.ylabel('y')
    plt.legend()
    plt.show()
plotting(x, y, ansY)
